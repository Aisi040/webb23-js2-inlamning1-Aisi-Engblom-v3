{"mappings":"AAAA,IAAI,cAAc;AAClB,IAAI,aAAa;AAEjB,eAAe;IACX,IAAI;QACA,MAAM,WAAW,MAAM,MAAM;QAC7B,IAAI,CAAC,SAAS,IACV,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,OAAO,CAAC;QAG5D,MAAM,OAAO,MAAM,SAAS;QAC5B,MAAM,gBAAgB,SAAS,eAAe;QAC9C,cAAc,YAAY;QAE1B,KAAK,QAAQ,CAAA;YACT,MAAM,KAAK,SAAS,cAAc;YAClC,GAAG,cAAc,CAAC,EAAE,MAAM,KAAK,EAAE,EAAE,MAAM,MAAM,CAAC;YAChD,cAAc,YAAY;QAC9B;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,MAAM,8BAA8B;IAChD;AACJ;AAEA,SAAS,eAAe,gBAAgB,iBAAiB,SAAS;IAC9D,aAAa,SAAS,eAAe,cAAc;IACnD,IAAI,WAAW,WAAW,IAAI;QAC1B,SAAS,eAAe,qBAAqB,cAAc;QAC3D,SAAS,eAAe,gBAAgB,MAAM,UAAU;QACxD,SAAS,eAAe,cAAc,MAAM,UAAU;QACtD,SAAS,eAAe,iBAAiB,MAAM,UAAU;QACzD,SAAS,eAAe,gBAAgB,MAAM,UAAU;QAExD,MAAM;IACV,OACI,MAAM;AAEd;AAEA,SAAS,iBAAiB,iBAAiB,QAAQ,CAAA;IAC/C,OAAO,iBAAiB,SAAS;QAC7B,MAAM,eAAe,IAAI,CAAC,aAAa;QACvC,MAAM,iBAAiB;YAAC;YAAQ;YAAO;SAAO,CAAC,KAAK,MAAM,KAAK,WAAW,GAAG;QAE7E,SAAS,eAAe,gBAAgB,YAAY;QACpD,SAAS,eAAe,kBAAkB,YAAY;QAEtD,IAAI,iBAAiB,gBACjB,SAAS,eAAe,eAAe,YAAY;aAChD,IACH,AAAC,iBAAiB,UAAU,mBAAmB,SAC9C,iBAAiB,SAAS,mBAAmB,aAC7C,iBAAiB,aAAU,mBAAmB,QACjD;YACE;YACA,SAAS,eAAe,eAAe,YAAY;YACnD,SAAS,eAAe,eAAe,YAAY;QACvD,OAAO;YACH,MAAM,cAAc,YAAY;YAChC,cAAc;YACd,SAAS,eAAe,eAAe,YAAY;YACnD,SAAS,eAAe,eAAe,YAAY;YAEnD,MAAM;QACV;IACJ;AACJ;AAEA,eAAe,cAAc,IAAI,EAAE,KAAK;IACpC,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,oCAAoC;YAC7D,QAAQ;YACR,SAAS;gBACL,gBAAgB;YACpB;YACA,MAAM,KAAK,UAAU;gBACjB,MAAM;gBACN,OAAO;YACX;QACJ;QAEA,IAAI,CAAC,SAAS,IACV,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,OAAO,CAAC;QAG5D,OAAO,MAAM,SAAS;IAC1B,EAAE,OAAO,OAAO;QACZ,QAAQ,MAAM,2BAA2B;IAC7C;AACJ;AAEA,4BAA4B;AAC5B,eAAe;IACX,SAAS,eAAe,iBAAiB,MAAM,UAAU;IACzD,SAAS,eAAe,gBAAgB,MAAM,UAAU;IACxD,MAAM;AACV;AAEA,4CAA4C;AAC5C","sources":["main.js"],"sourcesContent":["let playerScore = 0;\r\nlet playerName = '';\r\n\r\nasync function fetchHighscores() {\r\n    try {\r\n        const response = await fetch('http://localhost:3000/highscores');\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        const highscoreList = document.getElementById('highscoreList');\r\n        highscoreList.innerHTML = '';\r\n        \r\n        data.forEach(score => {\r\n            const li = document.createElement('li');\r\n            li.textContent = `${score.name}: ${score.score}`;\r\n            highscoreList.appendChild(li);\r\n        });\r\n    } catch (error) {\r\n        console.error('Error fetching highscores:', error);\r\n    }\r\n}\r\n\r\ndocument.getElementById('startGameBtn').addEventListener('click', async () => {\r\n    playerName = document.getElementById('playerName').value;\r\n    if (playerName.trim() !== \"\") {\r\n        document.getElementById('playerNameDisplay').textContent = playerName;\r\n        document.getElementById('startGameBtn').style.display = 'none';\r\n        document.getElementById('playerName').style.display = 'none';\r\n        document.getElementById('playerDisplay').style.display = 'block';\r\n        document.getElementById('gameElements').style.display = 'block';\r\n        \r\n        await fetchHighscores();\r\n    } else {\r\n        alert('Ange ditt namn innan du startar spelet.');\r\n    }\r\n});\r\n\r\ndocument.querySelectorAll('[data-choice]').forEach(button => {\r\n    button.addEventListener('click', async function() {\r\n        const playerChoice = this.getAttribute('data-choice');\r\n        const computerChoice = ['Sten', 'Sax', 'Påse'][Math.floor(Math.random() * 3)];\r\n\r\n        document.getElementById('playerChoice').innerText = playerChoice;\r\n        document.getElementById('computerChoice').innerText = computerChoice;\r\n\r\n        if (playerChoice === computerChoice) {\r\n            document.getElementById('roundWinner').innerText = 'Oavgjort';\r\n        } else if (\r\n            (playerChoice === 'Sten' && computerChoice === 'Sax') ||\r\n            (playerChoice === 'Sax' && computerChoice === 'Påse') ||\r\n            (playerChoice === 'Påse' && computerChoice === 'Sten')\r\n        ) {\r\n            playerScore++;\r\n            document.getElementById('playerScore').innerText = playerScore;\r\n            document.getElementById('roundWinner').innerText = 'Spelaren vinner';\r\n        } else {\r\n            await saveHighscore(playerName, playerScore);\r\n            playerScore = 0;\r\n            document.getElementById('playerScore').innerText = playerScore;\r\n            document.getElementById('roundWinner').innerText = 'Datorn vinner';\r\n            \r\n            await fetchHighscores();\r\n        }\r\n    });\r\n});\r\n\r\nasync function saveHighscore(name, score) {\r\n    try {\r\n        const response = await fetch('http://localhost:3000/highscores', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: name,\r\n                score: score\r\n            })\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error('Error saving highscore:', error);\r\n    }\r\n}\r\n\r\n// Initialize the game setup\r\nasync function init() {\r\n    document.getElementById('playerDisplay').style.display = 'none';\r\n    document.getElementById('gameElements').style.display = 'none';\r\n    await fetchHighscores();\r\n}\r\n\r\n// Call the initialize function on page load\r\ninit();\r\n"],"names":[],"version":3,"file":"index.3812ad20.js.map","sourceRoot":"/__parcel_source_root/"}